"""
Django settings for nimble project.
Generated by 'django-admin startproject' using Django 3.0.4.
For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
import os
from decimal import Decimal
from dotenv import load_dotenv


load_dotenv()
from frozendict import frozendict
# from yookassa import Configuration
# # import sentry_sdk
# # from sentry_sdk.integrations.django import DjangoIntegration
# #
# # sentry_sdk.init(
# #     dsn="https://4211a1ef20184c16a10153db8ada0619@o1059132.ingest.sentry.io/6061053",
# #     integrations=[DjangoIntegration()],
# #     traces_sample_rate=1.0,
# #     send_default_pii=True
# # )
# # if os.getenv('SENTRY', False):
# #     sentry_sdk.init(
# #         dsn=os.getenv('SENTRY'),
# #         integrations=[DjangoIntegration()],
# #         traces_sample_rate=1.0,
# #         send_default_pii=True
# #     )
# # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=&6j$@hxvp!(b37f+%yk7-ac^ci3=$qx0(*=^wrp=s@^#_+-tb'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', True)

ALLOWED_HOSTS = ('*',)

# Application definition

INSTALLED_APPS = (
    'admin_interface',
    'colorfield',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    # 'django.contrib.staticfiles',
    'django.contrib.sites',
    'rosetta',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.google',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_tracking',
    'dj_rest_auth',
    'django_filters',
    'drf_yasg',
    'simple_history',
    'mptt',
    'corsheaders',
    'django_editorjs_fields',
    'storages',
    'adminsortable2',
    'taggit',
    'graphene_django',
    'nested_inline',
    'nimble.utils.admin_inline',
    'nimble.common',
    'nimble.user',
    'mjml',
    'import_export',
    'django_seed',

    'main',
    'marketplace',
)

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

X_FRAME_OPTIONS = 'SAMEORIGIN'

LOGIN_URL = 'rest_framework:login'
LOGOUT_URL = 'rest_framework:logout'

ACCOUNT_MAX_EMAIL_ADDRESSES = 3

ACCOUNT_EMAIL_SUBJECT_PREFIX = 'Nimble: '

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]
MIDDLEWARE = (
    'nimble.disabled.DisableCSRF',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
)

AUTH_USER_MODEL = 'user.User'

ROOT_URLCONF = 'nimble.urls'

TEMPLATES = (
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['nimble/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'builtins': [
                'nimble.utils.template_tags.template_tags',

            ]
        },
    },
)

WSGI_APPLICATION = 'nimble.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases
#

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME', 'postgres'),
        'USER': os.getenv('DB_USER', 'postgres'),
        'HOST': os.getenv('DB_HOST', 'db'),
        'PORT': 5432,
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'nimble_db',
#         'USER': 'api_user',
#         'PASSWORD': '6k6Y6hLQ@b]WdnHY',
#         'HOST': 'localhost',
#         'PORT': '',
#     }
# }


# DATABASE_ROUTERS = ('nimble.db_routes.DbRouter',)

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = (
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
)

LANGUAGE_CODE = 'en'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

LANGUAGES = [('en', 'English'),
             ('ru', 'Russian')]

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Basic': {
            'type': 'basic',
        },
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header',
        },
    },
}

MJML_BACKEND_MODE = 'cmd'
MJML_EXEC_CMD = 'mjml'

CORS_ORIGIN_ALLOW_ALL = True

LOGGING = {
    'version': 1,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django.db.backends': {
            'level': 'INFO',
            'handlers': ['console'],
        },
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

SOCIALACCOUNT_PROVIDERS = {
    'facebook': {
        'METHOD': 'oauth2',
        'SCOPE': ['email', 'public_profile'],
        'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
        'INIT_PARAMS': {'cookie': True},
        'FIELDS': [
            'id',
            'email',
            'name',
            'first_name',
            'last_name',
        ],
        'EXCHANGE_TOKEN': True,
        'VERIFIED_EMAIL': False,
        'VERSION': 'v7.0',
    },
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}


SOCIALACCOUNT_ADAPTER = 'nimble.user.adapter.SocialAccountAdapter'
ACCOUNT_ADAPTER = 'nimble.user.adapter.DefaultAccountAdapterCustom'

EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_HOST_USER = 'apikey'

EMAIL_PORT = 587

EMAIL_HOST_PASSWORD = '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'
DEFAULT_FROM_EMAIL = 'nimblback@gmail.com'
EMAIL_USE_TLS = True
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

SITE_ID = 1
SITE_ID_FRONTEND = 2
SITE_ID_TEST = 3

OLD_PASSWORD_FIELD_ENABLED = True
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
LOGIN_REDIRECT_URL = 'https://app.nimble.com/'
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = 'https://app.nimble.com/'
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = 'https://app.nimble.com/'


# STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'
# STATICFILES_FINDERS = [
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
# ]


DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY')
AWS_SECRET_ACCESS_KEY_ID = os.getenv('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')
STATICFILES_STORAGE = 'storages.backends.s3boto3.S3StaticStorage'
AWS_STATIC_LOCATION = 'static'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication'
    ),
    'DEFAULT_SCHEMA_CLASS': (
        'rest_framework.schemas.coreapi.AutoSchema'
    ),
    'EXCEPTION_HANDLER': 'nimble.utils.drf_errors.handlers.friendly_exception_handler',
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'PAGE_SIZE': 100,
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    )
}
PROMO_THEME_COUNT = os.getenv('PROMO_THEME_COUNT', 3)
PROD_HOST = 'https://nimble.com'

# PAYMENT_RETURN_URL = os.getenv(
#     'PAYMENT_RETURN_URL', 'https://example.com/payment_end')
# PAYMENT_PARAMS = frozendict({
#     'month': Decimal(os.getenv('MONTH_PAYMENT', 1000)),
#     'year_discount_percent': os.getenv('YEAR_DISCOUNT_PERCENT', 25),  # noqa: WPS432
# })

STORE_ID = os.getenv('STORE_ID', '699110')
STORE_SECRET = os.getenv(
    'STORE_SECRET', 'test_MF5qAMH1M-Kbb2M_gbBzzNR5yebkS98vEkSJSgEeexQ')

# Configuration.configure(
#     os.getenv('STORE_ID', '697198'),
#     os.getenv('STORE_SECRET', 'live_XDKpX_u_0oco06gy9Kheb-2TysrH4-kcsRMiw40-v2g'),
# )

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

REST_USE_JWT = False

REST_AUTH_REGISTER_SERIALIZERS = {
    'REGISTER_SERIALIZER': 'nimble.user.serializers.UserRegistrationSerializer',
}

REST_AUTH_SERIALIZERS = {
    'TOKEN_SERIALIZER': 'nimble.user.serializers.TokenSerializer',
    'USER_DETAILS_SERIALIZER': 'nimble.user.serializers.UserSerializer'
}

DATA_UPLOAD_MAX_NUMBER_FIELDS = 10000